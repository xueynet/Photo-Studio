<template>
	<view class="page">
		<full-loading :show="fullloading"></full-loading>
		<u-navbar :is-back="false" :background="pagenavbg" :immersive="true">
			<view class="slot-content fillbox flex-space-between flex-row" >
				<view class="flex-center flex-row u-m-20" @click="addressshow = !addressshow">
					<u-icon size="50" custom-prefix="iconfont icon-dingwei1" class="u-m-r-10"></u-icon>
					<view class="dingwei bold">{{dingwei}}</view>
				</view>
				<view class="flex-center flex-row">
					<u-icon @click="$navto('/pages/search/search')" size="50" name="search" class="u-m-20"></u-icon>
					<u-icon @click="$navto('/pages/home/notice')" size="50" custom-prefix="iconfont icon-xiaoxi1" class="u-m-20"></u-icon>
				</view>
			</view>
		</u-navbar>
		<u-swiper class="banner" :height="750" bg-color="rgba(232, 0, 0,0)" mode="number" indicator-pos="bottomRight" :current="0" loading
			indicatorMode="line" circular :list="swiperlist" keyName="image" :title="false">
		</u-swiper>
		<view class="cards flex-center flex-row u-m-b-25 box-shadow">
			<view @click="$swithto('/pages/server/list')" class="card flex-row-center flex-center">
				<u-image width="120" height="120" src="/static/images/icon/shop.png"></u-image>
				<view class="title">预约服务</view>
				<view class="desc">提前预约，省心省事</view>
			</view>
			<u-line color="info" direction="col"/>
			<view @click="$swithto('/pages/category/category')" class="card flex-row-center flex-center">
				<u-image width="120" height="120"  src="/static/images/icon/shoping.png"></u-image>
				<view class="title">在线购物</view>
				<view class="desc">日用好货，尽在此刻</view>
			</view>
		</view>
		<swiper v-if="(gridlist.length>8)">
			<swiper-item v-for="(page,index) in gridpage" :key="index">
				<u-grid :col="4" :border="false" hover-class="hover-class">
					<u-grid-item class="bg-tm" @click="sgoto(item.to,item.id)" v-for="(item,index2) in page"
						:key="index2">
						<u-image :src="item.icon" width="88rpx" height="88rpx"></u-image>
						<view class="grid-text">{{item.name}}</view>
					</u-grid-item>
				</u-grid>
			</swiper-item>
		</swiper>
		<u-grid v-else :col="4" :border="false" hover-class="hover-class">
			<u-grid-item class="bg-tm" @click="sgoto(item.to,item.id)" v-for="(item,index2) in gridlist" :key="index2">
				<u-image :src="item.icon" width="88rpx" height="88rpx"></u-image>
				<view class="grid-text">{{item.name}}</view>
			</u-grid-item>
		</u-grid>
		<view class="flex-center flex-row flex-row-center u-m-40">
			<u-image width="40" height="40" src="/static/images/icon/sptj.png"></u-image>
			<view class="u-font-40 bold u-m-l-20">商品推荐</view>
		</view>
		<view class="list">
			<view class="item u-m-15 box-shadow border-radius" v-for="(item,index) in datalist" :key="index" @click="$navto('/pages/product/product',item.id)">
				<view class="image">
					<u-image :src="item.image"></u-image>
				</view>
				<view class="fillbox flex-col flex-space-between">
					<view class="title">{{item.title}}</view>
					<view class="flex-space-between flex-row u-m-t-40">
						<view class="price flex-center flex-row">
							<u-icon custom-prefix="iconfont icon-yen-sign" size="20"></u-icon>
							<text>{{item.price}}元</text>
						</view>
						<view class="demo-shop flex-center flex-row">
							<u-icon name="bag"></u-icon>
							{{item.shop}}
						</view>
					</view>
				</view>
			</view>
			<u-loadmore :load-text="loadText" :status="loadStatus" @loadmore="addRandomData"></u-loadmore>
		</view>
		<u-picker @confirm="xzaddress" v-model="addressshow" mode="region" :safe-area-inset-bottom="true" title="选择城市"></u-picker>
	</view>
</template>

<script>
	export default {
		data() {
			return {
				pagenavbg: {
					background: '#ffffff00',
					color:'#fff'
				},
				dingwei:getApp().globalData.area || '地区',
				loadStatus: 'loadmore',
				loadText: getApp().globalData.loadText,
				fullloading:true,
				
				addressshow:false,
				swiperlist: [],
				gridpage: [],
				gridlist: [],
				datalist: [],
			}
		},
		onShow() {
			if (getApp().globalData.hasLogin && getApp().globalData.hasLaunch) {
				getApp().globalData.hasLaunch = false
				this.getdata()
			} else {
				if(!getApp().globalData.hasLogin){
					this.$u.route({
						url: '/pages/home/login',
					})
				}
			}
		},
		onLoad(e) {
			this.option = e
			if (getApp().globalData.hasLogin && !getApp().globalData.hasLaunch) {
				this.getdata()
			}
		},
		onPullDownRefresh() {
			console.log('refresh');
			setTimeout(function() {
				uni.clearStorageSync();
				uni.stopPullDownRefresh();
			}, 1000);
		},
		onReachBottom() {
			this.loadStatus = 'loading';
			setTimeout(() => {
				this.addRandomData();
				this.loadStatus = 'loadmore';
			}, 500)
		},
		onPageScroll(e){
			var number = e.scrollTop/300
			var color = '#fff'
			if(e.scrollTop<150){
				var color = '#fff'
			}else{
				var color = '#000'
			}
			if(number>1){
				this.pagenavbg = {
					background: 'rgba(255,255,255)',
					'box-shadow': '0 20rpx 20rpx #51515110',
					color:color
				}
			}else{
				this.pagenavbg = {
					background: 'rgba(255,255,255,'+number+')',
					color:color
				}
			}
		},
		onReady() {
		},
		methods: {
			getdata() {
				var $this = this
				//请求uniapp名
				if(getApp().globalData.sitename === ''){
					/*this.$app.request({
						url:this.$api.siteinfo,
						data:{
							siteId:getApp().globalData.siteid,
						},
						success(res){
							console.log(res)
						},
						fail(err){
							console.log(err)
						}
					})*/
				}
				//请求栏目
				this.$app.request({
					url: this.$api.channels + getApp().globalData.siteid,
					success: res => {
						console.log(res)
						let data_list = []
						let or_list = []
						for (var i = 0; i < res.length; i++) {
							let test = -1
							if(Array.isArray(res[i].groupNames)) test = res[i].groupNames.indexOf("首页栏目")
							if(test > -1) data_list.push(res[i])
							//请求轮播图,广告图
							if(res[i].indexName === 'banner') {
								$this.getbanner(res[i].id)
							}
						}
						
						data_list = data_list.map((data) => {
							let to = null
							for (var i = 0; i < res.length; i++) {
								if(data.parentsPath[1] == res[i].id) to = res[i].indexName
							}
							return {
								id: data.id,
								guid:data.guid,
								parentid:data.parentsPath[1],
								name:data.channelName,
								icon:$this.$api.static + data.imageUrl.replace('@',''),
								to:to
							};
						})
						
						this.gridlist = data_list
					},
					fail: err => {
						console.log(err)
					},
				});
				
				uni.setNavigationBarTitle({
					title: '照相馆'
				});

				for (var i = 0; i < this.gridlist.length; i += 8) {
					this.gridpage.push(this.gridlist.slice(i, i + 8))
				}
				this.datalist = this.$defalutdata.goods
				this.addRandomData(); 
				setTimeout(function() {
					$this.fullloading = false
				}, 500);
			},
			getbanner(id){
				var $this = this
				this.$app.request({
					url:$this.$api.contents,
					method:'POST',
					data:{
						siteid:getApp().globalData.siteid,
						channelId:id,
					},
					success(res) {
						let data_list = res.contents.map((data) => {
							return {
								id: data.id,
								guid:data.guid,
								image:data.imageUrl,
							};
						})
						$this.swiperlist = data_list
					},
					fail(err){
						console.log(err)
					}
				})
			},
			xzaddress(e){
				this.dingwei = e.area.label
				getApp().globalData.province = e.province.label
				getApp().globalData.city = e.city.label
				getApp().globalData.area = e.area.label
				uni.setStorageSync('province',e.province.label)
				uni.setStorageSync('city',e.city.label)
				uni.setStorageSync('area',e.area.label)
			},
			addRandomData() {
				let data = this.datalist
				let list = JSON.parse(JSON.stringify(data))
				let arr = this.datalist.concat(list)
				this.datalist = arr
				console.log(arr)
			},
			sgoto(type,id){
				var totype = 'to'
				if(type==="server"){
					totype = 'tab'
				}
				this.$u.route({
					type:totype,
					url:'/pages/'+type+'/list',
					params:{
						id:id
					}
				})
			}
		}
	}
</script>

<style lang="scss">
	.page{
		background: #F8F8F8;
	}
	.dingwei{
		max-width:160rpx
	}
	.banner{
		 filter: contrast(60%);
	}
	.cards{
		background: #ffffff;
		width: 700rpx;
		border-radius: 10rpx;
		margin: auto;
		overflow:hidden;
		margin-top: -100rpx;
		padding: 50rpx 0;
		.u-line{
			opacity: .2;
			min-height: 200rpx !important;
			flex:unset
		}u-line{
			flex: unset;
		}
		.card{
			flex: 1;
			padding: 0 50rpx;
			background: #fff;
			.title{
				font-weight: bold;
				font-size: 40rpx;
				margin: 20rpx 0;
			}.desc{
				font-size: 20rpx;
			}
		}
	}
</style>
