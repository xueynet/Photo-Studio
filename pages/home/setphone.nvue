<template>
	<view class="page">
		<full-loading :show="fullloading"></full-loading>
		<u-form :model="model" :rules="rules" :errorType="errorType" ref="uForm">
			<u-form-item :rightIconStyle="{color: '#888', fontSize: '32rpx'}" right-icon="kefu-ermai" :label-position="labelPosition" label="手机号码" prop="phone" label-width="150">
				<u-input v-model="model.phone" placeholder="请输入手机号" :border="border" type="number"></u-input>
			</u-form-item>
			<u-form-item :label-position="labelPosition" label="验证码" prop="code" label-width="150">
				<u-input v-model="model.code" placeholder="请输入验证码" :border="border" type="text"></u-input>
				<u-button slot="right" type="default" size="mini" @click="getCode">{{codeTips}}</u-button>
			</u-form-item>
		</u-form>
		<view class="agreement">
			<u-checkbox active-color="green" v-model="check" @change="checkboxChange"></u-checkbox>
			<view class="agreement-text">
				勾选同意更改手机号
			</view>
		</view>
		<u-button type="error" @click="submit">提交</u-button>
		<u-verification-code seconds="60" ref="uCode" @change="codeChange"></u-verification-code>
	</view>
</template>

<script> 
	export default {
		data() {
			return {
				labelPosition: 'top',
				fullloading:true,
				border: false,
				check: false,
				errorType: ['message'],
				codeTips: '',
				
				model: {
					phone: '',
					code: '',
				},
				rules: {
					phone: [
						{
							required: true,
							message: '请输入手机号',
							trigger: ['change','blur'],
						},
						{
							validator: (rule, value, callback) => {
								return this.$u.test.mobile(value);
							},
							message: '手机号码不正确',
							trigger: ['change','blur'],
						}
					],
					code: [
						{
							required: true,
							message: '请输入验证码',
							trigger: ['change','blur'],
						},
						{
							type: 'number',
							message: '验证码只能为数字',
							trigger: ['change','blur'],
						}
					],
				},
			}
		},
		onShow() {
			this.$isLogin()&&this.getdata()
		},
		onLoad(e) {
			this.option = e
			this.$firstGet()&&this.getdata()
		},
		onReady() {
			this.$refs.uForm.setRules(this.rules);
		},
		methods: {
			getdata(){
				setTimeout(() => {
					this.fullloading = false
				}, 500);
			},
			submit() {
				this.$refs.uForm.validate(valid => {
					if (valid) {
						if(!this.model.agreement) return this.$u.toast('请勾选协议');
						console.log('验证通过');
					} else {
						console.log('验证失败');
					}
				});
			},
			// 勾选协议
			checkboxChange(e) {
				this.model.agreement = e.value;
			},
			codeChange(text) {
				this.codeTips = text;
			},
			// 获取验证码
			getCode() {
				if(this.$refs.uCode.canGetCode) {
					// 模拟向后端请求验证码
					uni.showLoading({
						title: '正在获取验证码',
						mask: true
					})
					setTimeout(() => {
						uni.hideLoading();
						// 这里此提示会被this.start()方法中的提示覆盖
						this.$u.toast('验证码已发送');
						// 通知验证码组件内部开始倒计时
						this.$refs.uCode.start();
					}, 2000);
				} else {
					this.$u.toast('倒计时结束后再发送');
				}
			},
		}
	}
</script>

<style lang="scss">
.page {
	padding: 30rpx;
	background: #fff;
	.u-input{
		align-items: center;
	}
}

.agreement {
	display: flex;
	align-items: center;
	flex-direction: row;
	margin: 40rpx 0;

	.agreement-text {
		padding-left: 8rpx;
		font-size: 20rpx;
		color: $u-tips-color;
	}
}
</style>
