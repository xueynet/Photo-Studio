<template>
	<view>
		<view class="wrap">
			<u-toast ref="uToast"/>
			<u-navbar
				backText="返回">
				<u-search placeholder="搜索订单" v-model="keyword"></u-search>
			</u-navbar>
			<u-tabs-swiper bg-color="#fff" 
			inactive-color="#333" active-color="#e80000"
			ref="tabs" :list="list" :current="current" @change="change" bar-width="100"
			:is-scroll="false" swiperWidth="750"></u-tabs-swiper>
			<swiper class="swiper-box" :current="swiperCurrent" @transition="transition" @animationfinish="animationfinish">
				<swiper-item class="swiper-item" v-for="(page, index) in list" :key="index">
					<scroll-view scroll-y style="height: 100%;width: 100%;" @scrolltolower="reachBottom">
						<view class="page-box" v-if="page.list.length>0">
							<view class="order" @click="navto('/pages/order/order/orderstatus',res.id)" v-for="(res, pindex) in page.list" :key="pindex">
								<view class="top">
									<view class="left">
										<u-icon v-if="false" name="home" :size="30" color="rgb(94,94,94)"></u-icon>
										<u-tag size="mini" shape="circle" text="自营" type='error' mode="dark"></u-tag>
										<view class="store">{{ res.store }}</view>
									</view>
									<view class="right">
										<text v-if="res.status == 1">待付款</text>
										<text v-if="res.status == 2">待发货</text>
										<text v-if="res.status == 3">待收货</text>
										<text v-if="res.status == 4">已完成</text>
									</view>
								</view>
								<view class="item" v-for="(item, index2) in res.goodsList" :key="index2">
									<view class="left"><image :src="item.image" mode="aspectFill"></image></view>
									<view class="content">
										<view class="title u-line-2">{{ item.title }}</view>
										<view class="type">{{ item.type }}</view>
										<view class="server">
											<u-tag v-for="(tag,index3) in item.server" :key="index3" type="error" size="mini" :text="tag.name" shape="circle"></u-tag>
										</view>
									</view>
									<view class="right">
										<view class="price">
											￥{{priceInt(item.price)}}
											<view class="decimal">.{{ priceDecimal(item.price) }}</view>
										</view>
										<view class="number">x{{ item.number }}</view>
									</view>
								</view>
								<view class="total">
									<view class="number">
										<view>共{{ totalNum(res.goodsList) }}件商品</view>
									</view>
									<view class="price">
										<view class="old-price">
											总价<u-icon size="20" custom-prefix="iconfont icon-yen-sign"></u-icon>{{res.zongjia}}
										</view>
										<view class="yh-price" v-if="false">
											优惠<u-icon size="20" custom-prefix="iconfont icon-yen-sign"></u-icon>0.00
										</view>
										<view class="total-price">
											实付款<u-icon size="20" custom-prefix="iconfont icon-yen-sign"></u-icon>{{res.zongjia}}
										</view>
									</view>
								</view>
								<view class="bottom">
									<view class="more"><u-icon name="more-dot-fill" color="rgb(203,203,203)"></u-icon></view>
									<view class="btns">
										<u-button @click="closeorder(res.id)" :plain="true" shape="circle" size="mini" class="btn" v-if="res.status == 1">取消订单</u-button>
										<u-button @click="navto('/pages/order/order/ordercreate',res.id)" :plain="true" shape="circle" size="mini" class="btn" v-if="res.status == 1">修改订单</u-button>
										<u-button @click="navto('/pages/order/pay/pay',res.id)" :plain="true" type="error" shape="circle" size="mini" class="btn" v-if="res.status == 1">继续支付</u-button>
										<u-button @click="msgorder(res.pid)" :plain="true" shape="circle" size="mini" class="btn" v-if="res.status == 2">提醒发货</u-button>
										<u-button @click="navto('/pages/order/wuliu/wuliu',res.id)" :plain="true" shape="circle" size="mini" class="btn" v-if="res.status == 3">查看物流</u-button>
										<u-button @click="navto('/pages/order/refund/refund',res.id)" :plain="true" shape="circle" size="mini" class="btn" v-if="res.status == 2||res.status == 3||res.status == 4">退换/售后</u-button>
										<u-button @click="navto('/pages/order/comment/addcomment',res.goodsList[0].pid)" :plain="true" type="warning" shape="circle" size="mini" class="btn" v-if="res.status == 4">评价</u-button>
										<u-button @click="navto('/pages/product/product',res.goodsList[0].pid)" :plain="true" type="error" shape="circle" size="mini" class="btn" v-if="res.status == 4">再次购买</u-button>
									</view>
								</view>
							</view>
							<u-loadmore :status="loadStatus[index].status" bgColor="#f2f2f2" @loadmore="reachBottom"></u-loadmore>
						</view>
						<view class="page-box" v-else>
							<view class="centre">
								<image src="https://cdn.uviewui.com/uview/template/taobao-order.png" mode=""></image>
								<view class="explain">
									您还没有相关的订单
									<view class="tips">可以去看看有那些想买的</view>
								</view>
								<view class="btn" @click="navto('index')">随便逛逛</view>
							</view>
						</view>
					</scroll-view>
				</swiper-item>
			</swiper>
		</view>
	</view>
</template>

<script> 
	export default {
		data() {
			return {
				keyword:'',
				list: [
					{
						name: '全部',
						list:[],
					},
					{
						name: '待付款',
						//count: 1,
						list:[],
					},
					{
						name: '待发货',
						list:[],
					},
					{
						name: '待收货',
						list:[],
					},
					{
						name: '已完成',
						list:[],
					}
				],
				current: 0,
				swiperCurrent: 0,
				tabsHeight: 0,
				loadStatus: [
					{
						status:'loadmore'
					},{
						status:'loadmore'
					},{
						status:'loadmore'
					},{
						status:'loadmore'
					},{
						status:'loadmore'
					},
				],
			};
		},
		computed: {
			// 价格小数
			priceDecimal() {
				return val => {
					if (val !== parseInt(val)) return val.slice(-2);
					else return '00';
				};
			},
			// 价格整数
			priceInt() {
				return val => {
					if (val !== parseInt(val)) return val.split('.')[0];
					else return val;
				};
			}
		},
		onShow() {
			if (getApp().globalData.hasLogin && getApp().globalData.hasLaunch) {
				getApp().globalData.hasLaunch = false
				this.getdata()
			} else {
				if(!getApp().globalData.hasLogin){
					this.$u.route({
						url: '/pages/home/login',
					})
				}
			}
		},
		onLoad(e) {
			this.option = e
			if (getApp().globalData.hasLogin && !getApp().globalData.hasLaunch) {
				this.getdata()
			}
		},
		onPullDownRefresh(){
			console.log('refresh');
			var that = this
			setTimeout(function () {
				that.$refs.uToast.show({
					title: '刷新完成',
					type: 'success',
				})
				uni.stopPullDownRefresh();
			}, 1000);
		},
		methods: {
			getdata(){
				this.list[0].list = this.$defalutdata.order
				this.list[1].list.push(this.$defalutdata.order[0])
				this.list[2].list.push(this.$defalutdata.order[1])
				this.list[4].list.push(this.$defalutdata.order[3])
				
				this.current = parseInt(this.option.id)||0
				this.swiperCurrent = parseInt(this.current)
				this.getList();
			},
			navto(url,id){
				var stype = 'navigateTo'
				if(url === 'index') {
					stype = "switchTab"
					url = "/pages/index/index"
				}
				this.$u.route({
					url:url,
					type:stype,
					params: {
						id: id,
					}
				})
			},
			closeorder(){
				console.log('取消订单')
			},
			msgorder(){
				console.log('提醒发货')
			},
			reachBottom() {
				if(this.list[this.swiperCurrent].list.length>20) {
					this.loadStatus[this.swiperCurrent].status = 'nomore'
					return 
				}
				this.loadStatus[this.swiperCurrent].status = 'loading'
				var that = this
				setTimeout(function() {
					that.loadStatus[that.swiperCurrent].status = 'loadmore'
					let data = that.list[that.swiperCurrent].list
					if(data.length>20) that.loadStatus[that.swiperCurrent].status = 'nomore'
					data = data.slice(0,10)
					data = that.list[that.swiperCurrent].list.concat(data)
					that.list[that.swiperCurrent].list = data
				}, 1000)
			},
			getList() {
				
			},
			totalNum(item) {
				let num = 0;
				item.map(val => {
					num += val.number;
				});
				return num;
			},
			change(index) {
				this.swiperCurrent = index;
				if(this.list[this.swiperCurrent].list.length==0){
					this.reachBottom()
				}
			},
			transition(e) {
				let dx = e.detail.dx;
				this.$refs.tabs.setDx(dx);
			},
			animationfinish(e) {
				let current = e.detail.current;
				this.$refs.tabs.setFinishCurrent(current);
				this.swiperCurrent = current;
				this.current = current;
			},
		}
	};
</script>

<style>
/* #ifndef H5 */
page {
	height: 100%;
	background-color: #f2f2f2;
}
/* #endif */
</style>

<style lang="scss" scoped>
.order {
	background-color: #ffffff;
	margin: 15rpx 15rpx 0 15rpx;
	border-radius: 20rpx;
	box-sizing: border-box;
	padding: 20rpx;
	font-size: 28rpx;
	.top {
		display: flex;
		justify-content: space-between;
		flex-direction: row;
		.left {
			display: flex;
			align-items: center;
			flex-direction: row;
			.store {
				margin: 0 10rpx;
				font-size: 32rpx;
				font-weight: bold;
			}
		}
		.right {
			color: #e80000;
		}
	}
	.item {
		display: flex;
		margin: 20rpx 0 0;
		flex-direction: row;
		.left {
			margin-right: 20rpx;
			image {
				width: 180rpx;
				height: 180rpx;
				border-radius: 10rpx;
			}
		}
		.content {
			flex: 1;
			.title {
				font-size: 28rpx;
				line-height: 60rpx;
				height: 60rpx;
				font-weight: bold;
			}
			.type {
				font-size: 26rpx;
				line-height: 60rpx;
				color: $u-tips-color;
			}
			.server {
				align-items: flex-start;
				margin-top: 15rpx;
				.u-tag{
					margin-right: 10rpx;
				}
			}
			
		}
		.right {
			margin-left: 10rpx;
			text-align: right;
			line-height: 60rpx;
			.price{
				flex-direction: row;
				font-weight: bold;
			}
			.decimal {
				font-size: 24rpx;
			}
			.number {
				color: $u-tips-color;
				font-size: 24rpx;
			}
		}
	}
	.total {
		margin-top: 20rpx;
		text-align: right;
		font-size: 24rpx;
		justify-content: space-between;
		flex-wrap: nowrap;
		flex-direction: row;
		color:#999;
		.number{
			padding-top: 5rpx;
		}
		.price{
			flex-wrap: nowrap;
			align-items: center;
			flex-direction: row;
		}
		.old-price {
			font-size: 26rpx;
			margin-left: 10rpx;
			flex-direction: row;
		}
		.yh-price {
			font-size: 26rpx;
			flex-direction: row;
			margin-left: 10rpx;
		}
		.total-price {
			font-size: 28rpx;
			margin-left: 10rpx;
			flex-direction: row;
			color: #000000;
			font-weight: bold;
		}
	}
	.bottom {
		display: flex;
		margin-top: 30rpx;
		justify-content: space-between;
		align-items: center;
		flex-direction: row;
		.btns{
			flex-direction: row;
		}
		.btn {
			line-height: 52rpx;
			width: 160rpx;
			border-radius: 26rpx;
			font-size: 26rpx;
			text-align: center;
			margin-left: 15rpx;
		}
	}
}
.centre {
	text-align: center;
	margin: 200rpx auto;
	align-items: center;
	font-size: 32rpx;
	image {
		width: 164rpx;
		height: 164rpx;
		border-radius: 50%;
		margin-bottom: 20rpx;
	}
	.tips {
		font-size: 24rpx;
		color: #999999;
		margin-top: 20rpx;
	}
	.btn {
		margin: 80rpx auto;
		width: 200rpx;
		border-radius: 32rpx;
		line-height: 64rpx;
		color: #ffffff;
		font-size: 26rpx;
		background: linear-gradient(270deg, rgba(249, 116, 90, 1) 0%, rgba(255, 158, 1, 1) 100%);
	}
}
.wrap {
	display: flex;
	flex-direction: column;
	height: calc(100vh - var(--window-top));
	width: 100%;
}
.swiper-box {
	flex: 1;
}
.swiper-item {
	height: 100%;
}
</style>
