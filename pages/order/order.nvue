<template>
	<view class="page">
		<full-loading :show="fullloading"></full-loading>
		<view class="wrap">
			<u-toast ref="uToast"/>
			<u-navbar :is-back="false">
				<u-icon @click="$swithto('/pages/home/home')" size="40" class="u-m-20" custom-prefix="iconfont icon-chevron-left"></u-icon>
				<u-search placeholder="搜索订单" v-model="keyword"></u-search>
			</u-navbar>
			<u-tabs-swiper bg-color="#fff" 
			inactive-color="#333" active-color="#e80000"
			ref="tabs" :list="list" :current="current" @change="change" bar-width="100"
			:is-scroll="false" swiperWidth="750"></u-tabs-swiper>
			<swiper class="swiper-box fillbox" :current="swiperCurrent" @transition="transition" @animationfinish="animationfinish">
				<swiper-item class="swiper-item" v-for="(page, index) in list" :key="index">
					<scroll-view scroll-y style="height: 100%;width: 100%;" @scrolltolower="reachBottom">
						<view class="page-box" v-if="page.list.length>0">
							<view class="order" @click="$navto('/pages/order/orderstatus',res.id)" v-for="(res, pindex) in page.list" :key="pindex">
								<view class="top">
									<view class="left">
										<u-icon v-if="false" name="home" :size="30" color="rgb(94,94,94)"></u-icon>
										<u-tag size="mini" shape="circle" text="自营" type='error' mode="dark"></u-tag>
										<view class="store">{{ res.store }}</view>
									</view>
									<view class="right">
										<text v-if="res.status == 1">待付款</text>
										<text v-if="res.status == 2">待发货</text>
										<text v-if="res.status == 3">待收货</text>
										<text v-if="res.status == 4">已完成</text>
									</view>
								</view>
								<view class="item" v-for="(item, index2) in res.goodsList" :key="index2">
									<view class="left"><image :src="item.image" mode="aspectFill"></image></view>
									<view class="content">
										<view class="title u-line-2">{{ item.title }}</view>
										<view class="type flex-center flex-row">
											<view class="u-m-r-15">数量：{{ item.number }}</view>
											<view>{{ item.type }}</view>
										</view>
										<view class="price flex-center flex-row">
											￥{{item.price}}
										</view>
										<view class="server flex-box">
											<u-tag class="u-m-b-10" v-for="(tag,index3) in item.server" :key="index3" type="error" size="mini" :text="tag.name" shape="circle"></u-tag>
										</view>
									</view>
								</view>
								<view class="total">
									<view class="number">
										<view>共{{ totalNum(res.goodsList) }}件商品</view>
									</view>
									<view class="flex-row">
										<view class="old-price">
											总价<u-icon size="20" custom-prefix="iconfont icon-yen-sign"></u-icon>{{res.zongjia}}
										</view>
										<view class="yh-price" v-if="false">
											优惠<u-icon size="20" custom-prefix="iconfont icon-yen-sign"></u-icon>0.00
										</view>
										<view class="total-price">
											实付款<u-icon size="20" custom-prefix="iconfont icon-yen-sign"></u-icon>{{res.zongjia}}
										</view>
									</view>
								</view>
								<view class="bottom">
									<view class="more"><u-icon name="more-dot-fill" color="rgb(203,203,203)"></u-icon></view>
									<view class="btns">
										<u-button @click="closeorder(res.id)" :plain="true" shape="circle" size="mini" class="btn" v-if="res.status == 1">取消订单</u-button>
										<u-button @click="$navto('/pages/order/ordercreate',res.id)" :plain="true" shape="circle" size="mini" class="btn" v-if="res.status == 1">修改订单</u-button>
										<u-button @click="$navto('/pages/order/pay',res.id)" :plain="true" type="error" shape="circle" size="mini" class="btn" v-if="res.status == 1">继续支付</u-button>
										<u-button @click="msgorder(res.pid)" :plain="true" shape="circle" size="mini" class="btn" v-if="res.status == 2">提醒发货</u-button>
										<u-button @click="$navto('/pages/order/wuliu',res.id)" :plain="true" shape="circle" size="mini" class="btn" v-if="res.status == 3">查看物流</u-button>
										<u-button @click="$navto('/pages/order/refund',res.id)" :plain="true" shape="circle" size="mini" class="btn" v-if="res.status == 2||res.status == 3||res.status == 4">退换/售后</u-button>
										<u-button @click="$navto('/pages/comment/addcomment',res.goodsList[0].pid)" :plain="true" type="warning" shape="circle" size="mini" class="btn" v-if="res.status == 4">评价</u-button>
										<u-button @click="$navto('/pages/product/product',res.goodsList[0].pid)" :plain="true" type="error" shape="circle" size="mini" class="btn" v-if="res.status == 4">再次购买</u-button>
									</view>
								</view>
							</view>
							<u-loadmore :load-text="loadText" :status="loadStatus[index].status" bgColor="#f2f2f2" @loadmore="reachBottom"></u-loadmore>
						</view>
						<view class="page-box" v-else>
							<view class="centre">
								<image src="https://cdn.uviewui.com/uview/template/taobao-order.png" mode=""></image>
								<view class="explain">
									您还没有相关的订单
									<view class="tips">可以去看看有那些想买的</view>
								</view>
								<view class="btn" @click="$swithto('/pages/index/index')">随便逛逛</view>
							</view>
						</view>
					</scroll-view>
				</swiper-item>
			</swiper>
		</view>
	</view>
</template>

<script> 
	export default {
		data() {
			return {
				fullloading:true,
				loadText:getApp().globalData.loadText,
				loadStatus: [
					{
						status:'loadmore'
					},{
						status:'loadmore'
					},{
						status:'loadmore'
					},{
						status:'loadmore'
					},{
						status:'loadmore'
					},
				],
				
				keyword:'',
				list: [
					{
						name: '全部',
						list:[],
					},
					{
						name: '待付款',
						//count: 1,
						list:[],
					},
					{
						name: '待发货',
						list:[],
					},
					{
						name: '待收货',
						list:[],
					},
					{
						name: '已完成',
						list:[],
					}
				],
				current: 0,
				swiperCurrent: 0,
				tabsHeight: 0,
				
			};
		},
		onShow() {
			this.$isLogin()&&this.getdata()
		},
		onLoad(e) {
			this.option = e
			this.$firstGet()&&this.getdata()
		},
		onPullDownRefresh(){
			console.log('refresh');
			var that = this
			setTimeout(function () {
				that.$refs.uToast.show({
					title: '刷新完成',
					type: 'success',
				})
				uni.stopPullDownRefresh();
			}, 1000);
		},
		methods: {
			getdata(){
				this.list[0].list = this.$defalutdata.order
				this.list[1].list.push(this.$defalutdata.order[0])
				this.list[2].list.push(this.$defalutdata.order[1])
				this.list[4].list.push(this.$defalutdata.order[3])
				
				this.current = parseInt(this.option.id)||0
				this.swiperCurrent = parseInt(this.current)
				this.getList();
				setTimeout(() => {
					this.fullloading = false
				}, 500);
			},
			//取消订单
			closeorder(){
				console.log('取消订单')
			},
			//提醒发货
			msgorder(){
				console.log('提醒发货')
			},
			//计算数量
			totalNum(item) {
				let num = 0;
				item.map(val => {
					num += val.number;
				});
				return num;
			},
			//请求算计
			getList() {
				
			},
			//加载更多
			reachBottom() {
				if(this.list[this.swiperCurrent].list.length>20) {
					this.loadStatus[this.swiperCurrent].status = 'nomore'
					return 
				}
				this.loadStatus[this.swiperCurrent].status = 'loading'
				var that = this
				setTimeout(function() {
					that.loadStatus[that.swiperCurrent].status = 'loadmore'
					let data = that.list[that.swiperCurrent].list
					if(data.length>20) that.loadStatus[that.swiperCurrent].status = 'nomore'
					data = data.slice(0,10)
					data = that.list[that.swiperCurrent].list.concat(data)
					that.list[that.swiperCurrent].list = data
				}, 1000)
			},
			
			//页面动效
			change(index) {
				this.swiperCurrent = index;
				if(this.list[this.swiperCurrent].list.length==0){
					this.reachBottom()
				}
			},
			transition(e) {
				let dx = e.detail.dx;
				this.$refs.tabs.setDx(dx);
			},
			animationfinish(e) {
				let current = e.detail.current;
				this.$refs.tabs.setFinishCurrent(current);
				this.swiperCurrent = current;
				this.current = current;
			},
		}
	};
</script>

<style lang="scss">
.page {
	height: 100%;
	background-color: #f2f2f2;
	.wrap {
		display: flex;
		flex-direction: column;
		height: calc(100vh - var(--window-top));
		width: 100%;
	}
}
</style>
