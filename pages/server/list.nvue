<template>
	<view class="page">
		<full-loading :show="fullloading"></full-loading>
		<u-navbar :is-back="false" :background="pagenavbg" :immersive="true">
			<view class="slot-content fillbox flex-center flex-row">
				<view class="flex-center flex-row">
					<u-icon @click="checklist = !checklist" size="50" name="list-dot" class="u-m-20"></u-icon>
				</view>
				<view class="flex-center flex-row bold" v-show="titleshow" @click="checklist = !checklist">
					选择服务
				</view>
				
			</view>
			<view slot="right">
				<view class="flex-center flex-row">
					<u-icon @click="$navto('/pages/search/search')" size="50" name="search" class="u-m-20"></u-icon>
				</view>
			</view>
		</u-navbar>
		<u-popup v-model="checklist" mode="left">
			<view class="slidebox">
				<view class="title">
					服务类型
				</view>
				<view @click="checklist = !checklist" class="item flex-center flex-row flex-start box-shadow border-radius" v-for="(item,index) in serverlist" :key="index">
					<u-image width="60" height="60" class="u-m-r-20" :src="item.image"></u-image>
					<view class="fillbox ">
						<view class="bold u-m-b-20">{{item.name}}</view>		
						<view class="color-dark u-font-10 u-line-2">{{item.desc}}</view>
					</view>
				</view>
			</view>
		</u-popup>
		<view class="serverbg banner">
			<u-image width="750" height="400" src="/static/images/cbanner/serverbg.png"></u-image>
		</view>
		<u-sticky :enable="enable" :offset-top="offsettop" :h5-nav-height="0" class="stickybox u-m-b-20" bg-color="#ffffff00">
			<view class="flex-center flex-row sticky">
				<view class="fillbox box-shadow border-radius">
					<u-tabs-swiper
						ref="tabs" 
						inactive-color="#333" 
						active-color="#da3c03" 
						bar-width="100"
						:list="tabs" 
						:current="current" 
						@change="tabsChange" 
						:is-scroll="false">
					</u-tabs-swiper>
				</view>
			</view>
		</u-sticky>
		<view class="list">
			<view class="item u-m-15 box-shadow border-radius" v-for="(item,index) in datalist" :key="index" @click="$navto('/pages/server/server',item.id)">
				<view class="image">
					<u-image :src="item.image"></u-image>
				</view>
				<view class="fillbox flex-col flex-space-between">
					<view class="title">{{item.title}}</view>
					<view class="flex-space-between flex-row u-m-t-40">
						<view class="price flex-center flex-row">
							<u-icon custom-prefix="iconfont icon-yen-sign" size="20"></u-icon>
							<text>{{item.price}}元</text>
						</view>
						<view class="demo-shop flex-center flex-row">
							<u-icon name="bag"></u-icon>
							{{item.shop}}
						</view>
					</view>
				</view>
			</view>
			<u-loadmore :load-text="loadText" :status="loadStatus" @loadmore="addRandomData"></u-loadmore>
		</view>
	</view>
</template>

<script>
	export default {
		data() {
			return {
				id:0,
				pagenavbg: {
					background: '#ffffff00',
					color:'#fff'
				},
				titleshow:false,
				tabs: [{
					name: '综合排序'
				}, {
					name: '销量优先'
				}, {
					name: '价格'
				}],
				checklist:false,
				current:0,
				fullloading:true,
				offsettop:0,
				enable:true,
				loadStatus: 'loadmore',
				datalist: [],
				serverlist:[],
				loadText:getApp().globalData.loadText
			};
		},
		onShow() {
			this.enable = true
			this.$isLogin()&&this.getdata()
			var $this = this
			setTimeout(function() {
				uni.createSelectorQuery().select('.banner').boundingClientRect((size) => {
					$this.$setnav($this,size.top*-1,size.height,true)
				}).exec()
			}, 0);
		},
		onLoad(e) {
			this.option = e
			this.$firstGet()&&this.getdata()
			this.offsettop = getApp().globalData.systeminfo.statusBarHeight + 44
		},
		onHide() {
			this.enable = false
		},
		onPullDownRefresh() {
			console.log('refresh');
			setTimeout(function () {
				uni.stopPullDownRefresh();
			}, 1000);
		},
		onReachBottom() {
			this.loadStatus = 'loading';
			setTimeout(() => {
				this.addRandomData(this.current);
				this.loadStatus = 'loadmore';
			}, 500)
		},
		onPageScroll(e){
			this.$setnav(this,e.scrollTop,uni.upx2px(400),true)
		},
		onReady() {
		},
		methods: {
			getdata(){
				this.datalist = this.$defalutdata.server
				this.serverlist = this.$defalutdata.servergory
				this.addRandomData(); 
				var $this = this
				setTimeout(function() {
					$this.fullloading = false
				}, 500);
			},
			//点击栏目切换数据
			tabsChange(index) {
				if(this.current == index) return
				this.current = index
				this.datalist = []
				uni.showLoading({
					title:'加载中',
					mask:true
				})
				this.loadStatus = 'loading';
				setTimeout(() => {
					this.addRandomData(index)
					uni.hideLoading()
					this.loadStatus = 'loadmore';
				}, 500)
			},
			//加载更多
			addRandomData(type) {
				let data = this.$defalutdata.server
				let list = JSON.parse(JSON.stringify(data))
				let arr = this.datalist.concat(list)
				this.datalist = arr
			},
		},
	}
</script>

<style lang="scss">
	page{
		background: #f8f8f8;
	}
</style>
