<template>
	<view class="page">
		<full-loading :show="fullloading"></full-loading>
		<u-sticky :enable="enable">
			<view class="flex-center flex-row">
				<view class="fillbox">
					<u-tabs-swiper
						ref="tabs" 
						inactive-color="#333" 
						active-color="#da3c03" 
						bar-width="100"
						:list="tabs" 
						:current="current" 
						@change="tabsChange" 
						:is-scroll="false">
					</u-tabs-swiper>
				</view>
			</view>
		</u-sticky>
		<view class="list">
			<view class="item" v-for="(item,index) in datalist" :key="index" @click="$navto('/pages/product/product',item.id)">
				<view class="image">
					<u-image :src="item.image"></u-image>
				</view>
				<view class="fillbox flex-col flex-space-between">
					<view class="title">{{item.title}}</view>
					<view class="flex-space-between flex-row u-m-t-40">
						<view class="price flex-center flex-row">
							<u-icon custom-prefix="iconfont icon-yen-sign" size="20"></u-icon>
							<text>{{item.price}}元</text>
						</view>
						<view class="demo-shop flex-center flex-row">
							<u-icon name="bag"></u-icon>
							{{item.shop}}
						</view>
					</view>
				</view>
			</view>
			<u-loadmore :load-text="loadText" :status="loadStatus" @loadmore="addRandomData"></u-loadmore>
		</view>
	</view>
</template>

<script>
	export default {
		data() {
			return {
				id:0,
				tabs: [{
					name: '综合排序'
				}, {
					name: '销量优先'
				}, {
					name: '价格'
				}],
				current:0,
				fullloading:true,
				enable:true,
				loadStatus: 'loadmore',
				datalist: [],
				loadText:getApp().globalData.loadText
			};
		},
		onShow() {
			this.enable = true
			if (getApp().globalData.hasLogin && getApp().globalData.hasLaunch) {
				getApp().globalData.hasLaunch = false
				this.getdata()
			} else {
				if(!getApp().globalData.hasLogin){
					this.$u.route({
						url: '/pages/home/login',
					})
				}
			}
		},
		onLoad(e) {
			this.option = e
			if (getApp().globalData.hasLogin && !getApp().globalData.hasLaunch) {
				this.getdata()
			}
		},
		onHide() {
			this.enable = false
		},
		onPullDownRefresh() {
			console.log('refresh');
			setTimeout(function () {
				uni.stopPullDownRefresh();
			}, 1000);
		},
		onReachBottom() {
			this.loadStatus = 'loading';
			setTimeout(() => {
				this.addRandomData(this.current);
				this.loadStatus = 'loadmore';
			}, 500)
		},
		onReady() {
		},
		methods: {
			getdata(){
				this.datalist = this.$defalutdata.goods
				this.addRandomData(); 
				var $this = this
				setTimeout(function() {
					$this.fullloading = false
				}, 500);
			},
			tabsChange(index) {
				if(this.current == index) return
				this.current = index
				this.datalist = []
				uni.showLoading({
					title:'加载中',
					mask:true
				})
				this.loadStatus = 'loading';
				setTimeout(() => {
					this.addRandomData(index)
					uni.hideLoading()
					this.loadStatus = 'loadmore';
				}, 500)
			},
			addRandomData(type) {
				let data = this.$defalutdata.goods
				let list = JSON.parse(JSON.stringify(data))
				let arr = this.datalist.concat(list)
				this.datalist = arr
			},
		},
	}
</script>

<style lang="scss">
</style>
